<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.7 on win32)" generated="20201013 18:03:50.197" rpa="false">
<suite id="s1" name="Dummy Connector" source="D:\projects\Platform of trust\dummy\robottests\tests\dummy_connector.robot">
<kw name="Create All DataProducts" library="dummy_variables" type="setup">
<kw name="Create DataProduct With Arguments" library="dummy_variables">
<arguments>
<arg>${PRODUCT_CODE}</arg>
<arg>${TRANSLATOR_URL}</arg>
<arg>${TRANSLATOR_PUBLIC_KEY}</arg>
</arguments>
<kw name="Set Authorization token in header" library="dummy_variables">
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"Authorization": "Bearer ${demo_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:03:50.786" endtime="20201013 18:03:50.787"></status>
</kw>
<status status="PASS" starttime="20201013 18:03:50.786" endtime="20201013 18:03:50.787"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${PRODUCT_BODY}</arg>
<arg>productCode</arg>
<arg>${PRODUCT_CODE}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:03:50.787" endtime="20201013 18:03:50.787"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${PRODUCT_BODY}</arg>
<arg>translatorUrl</arg>
<arg>${TRANSLATOR_URL_FETCH}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:03:50.787" endtime="20201013 18:03:50.788"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${PRODUCT_BODY.organizationPublicKeys[0]}</arg>
<arg>url</arg>
<arg>${TRANSLATOR_PUBLIC_KEY}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:03:50.788" endtime="20201013 18:03:50.788"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/products/v1</arg>
<arg>${PRODUCT_BODY}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:03:50.788" endtime="20201013 18:03:53.188"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20201013 18:03:53.189" endtime="20201013 18:03:53.190"></status>
</kw>
<status status="PASS" starttime="20201013 18:03:50.785" endtime="20201013 18:03:53.190"></status>
</kw>
<kw name="Create DataProduct With Arguments" library="dummy_variables">
<arguments>
<arg>${PRODUCT_CODE_HUMIDITY}</arg>
<arg>${TRANSLATOR_URL_HUMIDITY}</arg>
<arg>${TRANSLATOR_PUBLIC_KEY}</arg>
</arguments>
<kw name="Set Authorization token in header" library="dummy_variables">
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"Authorization": "Bearer ${demo_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:03:53.191" endtime="20201013 18:03:53.192"></status>
</kw>
<status status="PASS" starttime="20201013 18:03:53.191" endtime="20201013 18:03:53.192"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${PRODUCT_BODY}</arg>
<arg>productCode</arg>
<arg>${PRODUCT_CODE}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:03:53.192" endtime="20201013 18:03:53.193"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${PRODUCT_BODY}</arg>
<arg>translatorUrl</arg>
<arg>${TRANSLATOR_URL_FETCH}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:03:53.193" endtime="20201013 18:03:53.193"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${PRODUCT_BODY.organizationPublicKeys[0]}</arg>
<arg>url</arg>
<arg>${TRANSLATOR_PUBLIC_KEY}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:03:53.193" endtime="20201013 18:03:53.194"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/products/v1</arg>
<arg>${PRODUCT_BODY}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:03:53.194" endtime="20201013 18:04:35.500"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:35.500" endtime="20201013 18:04:35.501"></status>
</kw>
<status status="PASS" starttime="20201013 18:03:53.190" endtime="20201013 18:04:35.501"></status>
</kw>
<kw name="Create DataProduct With Arguments" library="dummy_variables">
<arguments>
<arg>${PRODUCT_CODE_CO2}</arg>
<arg>${TRANSLATOR_URL_CO2}</arg>
<arg>${TRANSLATOR_PUBLIC_KEY}</arg>
</arguments>
<kw name="Set Authorization token in header" library="dummy_variables">
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"Authorization": "Bearer ${demo_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:35.502" endtime="20201013 18:04:35.502"></status>
</kw>
<status status="PASS" starttime="20201013 18:04:35.501" endtime="20201013 18:04:35.502"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${PRODUCT_BODY}</arg>
<arg>productCode</arg>
<arg>${PRODUCT_CODE}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:35.502" endtime="20201013 18:04:35.503"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${PRODUCT_BODY}</arg>
<arg>translatorUrl</arg>
<arg>${TRANSLATOR_URL_FETCH}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:35.503" endtime="20201013 18:04:35.503"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${PRODUCT_BODY.organizationPublicKeys[0]}</arg>
<arg>url</arg>
<arg>${TRANSLATOR_PUBLIC_KEY}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:35.503" endtime="20201013 18:04:35.504"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/products/v1</arg>
<arg>${PRODUCT_BODY}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:35.504" endtime="20201013 18:04:56.693"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:56.694" endtime="20201013 18:04:56.695"></status>
</kw>
<status status="PASS" starttime="20201013 18:04:35.501" endtime="20201013 18:04:56.695"></status>
</kw>
<status status="PASS" starttime="20201013 18:03:50.784" endtime="20201013 18:04:56.696"></status>
</kw>
<test id="s1-t1" name="fetch, 200, when request data Product created with dummy connector temperature endpoint">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:04:56.702" level="INFO">${timestamp} = 2020-10-13T15:04:56.702110Z</msg>
<status status="PASS" starttime="20201013 18:04:56.702" endtime="20201013 18:04:56.703"></status>
</kw>
<status status="PASS" starttime="20201013 18:04:56.701" endtime="20201013 18:04:56.703"></status>
</kw>
<msg timestamp="20201013 18:04:56.704" level="INFO">${timestamp} = 2020-10-13T15:04:56.702110Z</msg>
<status status="PASS" starttime="20201013 18:04:56.700" endtime="20201013 18:04:56.704"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:56.706" endtime="20201013 18:04:56.706"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BROKER_BODY}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:04:56.730" level="INFO">${signature} = QDu/ulYDDi0G3jN5h7dDXiZ6t+FBpA91tEtdbDRSP84=</msg>
<status status="PASS" starttime="20201013 18:04:56.729" endtime="20201013 18:04:56.730"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:56.730" endtime="20201013 18:04:56.731"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:56.731" endtime="20201013 18:04:56.732"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:56.732" endtime="20201013 18:04:58.299"></status>
</kw>
<status status="PASS" starttime="20201013 18:04:56.728" endtime="20201013 18:04:58.300"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.300" endtime="20201013 18:04:58.301"></status>
</kw>
<kw name="Verify Data Product Context Links and Type" library="brokercommon">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>${CONTEXT_POT_Output_Sensor}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.302" endtime="20201013 18:04:58.303"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
<arg>minItems=0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.303" endtime="20201013 18:04:58.307"></status>
</kw>
<status status="PASS" starttime="20201013 18:04:58.301" endtime="20201013 18:04:58.307"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
<arg>minItems=3</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.308" endtime="20201013 18:04:58.311"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 timestamp</arg>
<arg>2020-04-20T13:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.311" endtime="20201013 18:04:58.312"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 value</arg>
<arg>23.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.312" endtime="20201013 18:04:58.313"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 @type</arg>
<arg>MeasureAirTemperatureCelsiusDegree</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.314" endtime="20201013 18:04:58.315"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 timestamp</arg>
<arg>2020-04-20T14:00:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.315" endtime="20201013 18:04:58.316"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 value</arg>
<arg>22.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.316" endtime="20201013 18:04:58.317"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 @type</arg>
<arg>MeasureAirTemperatureCelsiusDegree</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.318" endtime="20201013 18:04:58.319"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 timestamp</arg>
<arg>2020-04-20T14:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.320" endtime="20201013 18:04:58.324"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 value</arg>
<arg>21.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.325" endtime="20201013 18:04:58.327"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 @type</arg>
<arg>MeasureAirTemperatureCelsiusDegree</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.327" endtime="20201013 18:04:58.328"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 0 timestamp</arg>
<arg>2020-04-20T13:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.328" endtime="20201013 18:04:58.329"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 0 value</arg>
<arg>19.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.330" endtime="20201013 18:04:58.331"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 0 @type</arg>
<arg>MeasureAirTemperatureCelsiusDegree</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.332" endtime="20201013 18:04:58.333"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 1 timestamp</arg>
<arg>2020-04-20T14:00:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.334" endtime="20201013 18:04:58.336"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 1 value</arg>
<arg>18.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.337" endtime="20201013 18:04:58.339"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 1 @type</arg>
<arg>MeasureAirTemperatureCelsiusDegree</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.340" endtime="20201013 18:04:58.342"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 2 timestamp</arg>
<arg>2020-04-20T14:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.342" endtime="20201013 18:04:58.343"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 2 value</arg>
<arg>17.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.343" endtime="20201013 18:04:58.345"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 2 @type</arg>
<arg>MeasureAirTemperatureCelsiusDegree</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.345" endtime="20201013 18:04:58.347"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 0 timestamp</arg>
<arg>2020-04-20T13:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.347" endtime="20201013 18:04:58.349"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 0 value</arg>
<arg>19.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.350" endtime="20201013 18:04:58.352"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 0 @type</arg>
<arg>MeasureAirTemperatureCelsiusDegree</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.352" endtime="20201013 18:04:58.354"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 1 timestamp</arg>
<arg>2020-04-20T14:00:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.354" endtime="20201013 18:04:58.356"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 1 value</arg>
<arg>18.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.356" endtime="20201013 18:04:58.358"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 1 @type</arg>
<arg>MeasureAirTemperatureCelsiusDegree</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.359" endtime="20201013 18:04:58.361"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 2 timestamp</arg>
<arg>2020-04-20T14:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.362" endtime="20201013 18:04:58.363"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 2 value</arg>
<arg>17.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.364" endtime="20201013 18:04:58.366"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 2 @type</arg>
<arg>MeasureAirTemperatureCelsiusDegree</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.367" endtime="20201013 18:04:58.370"></status>
</kw>
<kw name="Verify Signature From Response" library="brokercommon">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body signature type</arg>
<arg>RsaSignature2018</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.372" endtime="20201013 18:04:58.375"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body signature created</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.375" endtime="20201013 18:04:58.376"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body signature creator</arg>
<arg>${TRANSLATOR_PUBLIC_KEY}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.377" endtime="20201013 18:04:58.378"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body signature signatureValue</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.379" endtime="20201013 18:04:58.380"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>True</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.380" endtime="20201013 18:04:58.382"></status>
</kw>
<status status="PASS" starttime="20201013 18:04:58.371" endtime="20201013 18:04:58.382"></status>
</kw>
<status status="PASS" starttime="20201013 18:04:56.696" endtime="20201013 18:04:58.383" critical="yes"></status>
</test>
<test id="s1-t2" name="fetch, 422, when header has x-pot-signature without value">
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "", "x-app-token": "${ACCESS_TOKENS["app3"]}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.385" endtime="20201013 18:04:58.385"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${BROKER_BODY}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.386" endtime="20201013 18:04:58.697"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.698" endtime="20201013 18:04:58.699"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.699" endtime="20201013 18:04:58.700"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>Signature validation failed</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.700" endtime="20201013 18:04:58.701"></status>
</kw>
<status status="PASS" starttime="20201013 18:04:58.384" endtime="20201013 18:04:58.701" critical="yes"></status>
</test>
<test id="s1-t3" name="fetch, 422, when body is empty">
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>{}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:04:58.705" level="INFO">${signature} = jPh2WaY/TWiNq49H7JdQ3IiyAcy2P6xcwjDDbpQSpjI=</msg>
<status status="PASS" starttime="20201013 18:04:58.704" endtime="20201013 18:04:58.705"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.705" endtime="20201013 18:04:58.705"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.705" endtime="20201013 18:04:58.706"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.706" endtime="20201013 18:04:58.980"></status>
</kw>
<status status="PASS" starttime="20201013 18:04:58.704" endtime="20201013 18:04:58.980"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.980" endtime="20201013 18:04:58.981"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.981" endtime="20201013 18:04:58.982"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message productCode 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.982" endtime="20201013 18:04:58.983"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message timestamp 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.983" endtime="20201013 18:04:58.984"></status>
</kw>
<status status="PASS" starttime="20201013 18:04:58.703" endtime="20201013 18:04:58.984" critical="yes"></status>
</test>
<test id="s1-t4" name="fetch, 502, when object parameters is missing connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:04:58.989" level="INFO">${timestamp} = 2020-10-13T15:04:58.988723Z</msg>
<status status="PASS" starttime="20201013 18:04:58.988" endtime="20201013 18:04:58.989"></status>
</kw>
<status status="PASS" starttime="20201013 18:04:58.987" endtime="20201013 18:04:58.989"></status>
</kw>
<msg timestamp="20201013 18:04:58.990" level="INFO">${timestamp} = 2020-10-13T15:04:58.988723Z</msg>
<status status="PASS" starttime="20201013 18:04:58.987" endtime="20201013 18:04:58.990"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITHOUT_PARAMETERS}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.991" endtime="20201013 18:04:58.991"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITHOUT_PARAMETERS}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:04:58.994" level="INFO">${signature} = 1oFpvj+bBwzKR6dZRvL3QQJ8OSs8V3lLViEeIZ8lUBY=</msg>
<status status="PASS" starttime="20201013 18:04:58.994" endtime="20201013 18:04:58.994"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.994" endtime="20201013 18:04:58.995"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.995" endtime="20201013 18:04:58.996"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:04:58.996" endtime="20201013 18:05:20.571"></status>
</kw>
<status status="PASS" starttime="20201013 18:04:58.993" endtime="20201013 18:05:20.571"></status>
</kw>
<kw name="Verify handle of translator unsuccessful response" library="brokercommon">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:20.573" endtime="20201013 18:05:20.574"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:20.574" endtime="20201013 18:05:20.576"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>External translator returns an invalid response.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:20.576" endtime="20201013 18:05:20.578"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:20.579" endtime="20201013 18:05:20.580"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response data error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:20.580" endtime="20201013 18:05:20.581"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:20.581" endtime="20201013 18:05:20.583"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:20.572" endtime="20201013 18:05:20.583"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters dataTypes 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:20.584" endtime="20201013 18:05:20.585"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters ids 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:20.586" endtime="20201013 18:05:20.587"></status>
</kw>
<status status="PASS" starttime="20201013 18:04:58.986" endtime="20201013 18:05:20.588" critical="yes"></status>
</test>
<test id="s1-t5" name="fetch, 200, when optional parameters startTime &amp; endTime are missing">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:20.594" level="INFO">${timestamp} = 2020-10-13T15:05:20.592771Z</msg>
<status status="PASS" starttime="20201013 18:05:20.593" endtime="20201013 18:05:20.594"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:20.591" endtime="20201013 18:05:20.594"></status>
</kw>
<msg timestamp="20201013 18:05:20.595" level="INFO">${timestamp} = 2020-10-13T15:05:20.592771Z</msg>
<status status="PASS" starttime="20201013 18:05:20.591" endtime="20201013 18:05:20.595"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITHOUT_TIME}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:20.596" endtime="20201013 18:05:20.596"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITHOUT_TIME}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:20.599" level="INFO">${signature} = d9FelraEhK7kNwIvB3B3AsD6ca3cHWtYga0YhVPYW+M=</msg>
<status status="PASS" starttime="20201013 18:05:20.598" endtime="20201013 18:05:20.599"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:20.599" endtime="20201013 18:05:20.600"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:20.600" endtime="20201013 18:05:20.601"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:20.601" endtime="20201013 18:05:21.166"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:20.597" endtime="20201013 18:05:21.167"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.167" endtime="20201013 18:05:21.168"></status>
</kw>
<kw name="Verify Data Product Context Links and Type" library="brokercommon">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>${CONTEXT_POT_Output_Sensor}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.169" endtime="20201013 18:05:21.171"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
<arg>minItems=0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.171" endtime="20201013 18:05:21.174"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:21.169" endtime="20201013 18:05:21.174"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:20.589" endtime="20201013 18:05:21.175" critical="yes"></status>
</test>
<test id="s1-t6" name="fetch, 502, when required parameter ids is missing connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:21.179" level="INFO">${timestamp} = 2020-10-13T15:05:21.178804Z</msg>
<status status="PASS" starttime="20201013 18:05:21.178" endtime="20201013 18:05:21.179"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:21.178" endtime="20201013 18:05:21.180"></status>
</kw>
<msg timestamp="20201013 18:05:21.180" level="INFO">${timestamp} = 2020-10-13T15:05:21.178804Z</msg>
<status status="PASS" starttime="20201013 18:05:21.177" endtime="20201013 18:05:21.180"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITHOUT_IDS}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.182" endtime="20201013 18:05:21.183"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITHOUT_IDS}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:21.186" level="INFO">${signature} = Jg5ncZj1lYP7dW0EHaKtYlhohXxbe2TD1klOgoawkEY=</msg>
<status status="PASS" starttime="20201013 18:05:21.184" endtime="20201013 18:05:21.186"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.187" endtime="20201013 18:05:21.188"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.188" endtime="20201013 18:05:21.189"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.189" endtime="20201013 18:05:21.733"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:21.183" endtime="20201013 18:05:21.734"></status>
</kw>
<kw name="Verify handle of translator unsuccessful response" library="brokercommon">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.741" endtime="20201013 18:05:21.743"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.743" endtime="20201013 18:05:21.744"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>External translator returns an invalid response.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.745" endtime="20201013 18:05:21.746"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.746" endtime="20201013 18:05:21.748"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response data error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.748" endtime="20201013 18:05:21.749"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.749" endtime="20201013 18:05:21.750"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:21.740" endtime="20201013 18:05:21.751"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters ids 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.752" endtime="20201013 18:05:21.753"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:21.176" endtime="20201013 18:05:21.753" critical="yes"></status>
</test>
<test id="s1-t7" name="fetch, 502, when required parameter dataTypes is missing connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:21.757" level="INFO">${timestamp} = 2020-10-13T15:05:21.756803Z</msg>
<status status="PASS" starttime="20201013 18:05:21.756" endtime="20201013 18:05:21.758"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:21.756" endtime="20201013 18:05:21.758"></status>
</kw>
<msg timestamp="20201013 18:05:21.758" level="INFO">${timestamp} = 2020-10-13T15:05:21.756803Z</msg>
<status status="PASS" starttime="20201013 18:05:21.755" endtime="20201013 18:05:21.758"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITHOUT_DATA_TYPES}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.759" endtime="20201013 18:05:21.760"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITHOUT_DATA_TYPES}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:21.762" level="INFO">${signature} = 3DBOBZLBB5jnhu8vqzXTfkaS9axqtG/wsFCzAe4sT8I=</msg>
<status status="PASS" starttime="20201013 18:05:21.762" endtime="20201013 18:05:21.762"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.763" endtime="20201013 18:05:21.764"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.764" endtime="20201013 18:05:21.765"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:21.765" endtime="20201013 18:05:22.247"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:21.761" endtime="20201013 18:05:22.247"></status>
</kw>
<kw name="Verify handle of translator unsuccessful response" library="brokercommon">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.248" endtime="20201013 18:05:22.249"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.249" endtime="20201013 18:05:22.250"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>External translator returns an invalid response.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.250" endtime="20201013 18:05:22.252"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.252" endtime="20201013 18:05:22.253"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response data error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.253" endtime="20201013 18:05:22.253"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.254" endtime="20201013 18:05:22.255"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:22.248" endtime="20201013 18:05:22.255"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters dataTypes 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.255" endtime="20201013 18:05:22.257"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:21.754" endtime="20201013 18:05:22.257" critical="yes"></status>
</test>
<test id="s1-t8" name="fetch, 200, when parameter ids is an empty array">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:22.260" level="INFO">${timestamp} = 2020-10-13T15:05:22.259710Z</msg>
<status status="PASS" starttime="20201013 18:05:22.260" endtime="20201013 18:05:22.260"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:22.260" endtime="20201013 18:05:22.261"></status>
</kw>
<msg timestamp="20201013 18:05:22.261" level="INFO">${timestamp} = 2020-10-13T15:05:22.259710Z</msg>
<status status="PASS" starttime="20201013 18:05:22.259" endtime="20201013 18:05:22.261"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITH_IDS_EMPTY}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.261" endtime="20201013 18:05:22.261"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITH_IDS_EMPTY}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:22.262" level="INFO">${signature} = fMq1dSy18C5E6kJbLLorMzoEPJ82bcTxsPfC1Qxea+A=</msg>
<status status="PASS" starttime="20201013 18:05:22.262" endtime="20201013 18:05:22.263"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.263" endtime="20201013 18:05:22.263"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.263" endtime="20201013 18:05:22.264"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.264" endtime="20201013 18:05:22.701"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:22.262" endtime="20201013 18:05:22.701"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.702" endtime="20201013 18:05:22.704"></status>
</kw>
<kw name="Verify Data Product Context Links and Type" library="brokercommon">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>${CONTEXT_POT_Output_Sensor}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.706" endtime="20201013 18:05:22.707"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
<arg>minItems=0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.707" endtime="20201013 18:05:22.709"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:22.704" endtime="20201013 18:05:22.709"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
<arg>maxItems=0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.710" endtime="20201013 18:05:22.712"></status>
</kw>
<kw name="Verify Signature From Response" library="brokercommon">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body signature type</arg>
<arg>RsaSignature2018</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.712" endtime="20201013 18:05:22.713"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body signature created</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.714" endtime="20201013 18:05:22.714"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body signature creator</arg>
<arg>${TRANSLATOR_PUBLIC_KEY}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.715" endtime="20201013 18:05:22.716"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body signature signatureValue</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.716" endtime="20201013 18:05:22.717"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>True</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.717" endtime="20201013 18:05:22.718"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:22.712" endtime="20201013 18:05:22.718"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:22.259" endtime="20201013 18:05:22.719" critical="yes"></status>
</test>
<test id="s1-t9" name="fetch, 502, when ids parameter has invalid type connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:22.724" level="INFO">${timestamp} = 2020-10-13T15:05:22.723497Z</msg>
<status status="PASS" starttime="20201013 18:05:22.723" endtime="20201013 18:05:22.724"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:22.722" endtime="20201013 18:05:22.724"></status>
</kw>
<msg timestamp="20201013 18:05:22.724" level="INFO">${timestamp} = 2020-10-13T15:05:22.723497Z</msg>
<status status="PASS" starttime="20201013 18:05:22.721" endtime="20201013 18:05:22.724"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITH_IDS_INVALID_TYPE}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.725" endtime="20201013 18:05:22.725"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITH_IDS_INVALID_TYPE}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:22.727" level="INFO">${signature} = MwbfJa90mEtREOZQvJ82mzFePJRhJ4p22jaxgZa1hzg=</msg>
<status status="PASS" starttime="20201013 18:05:22.727" endtime="20201013 18:05:22.727"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.729" endtime="20201013 18:05:22.729"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.729" endtime="20201013 18:05:22.729"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:22.731" endtime="20201013 18:05:23.949"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:22.727" endtime="20201013 18:05:23.950"></status>
</kw>
<kw name="Verify handle of translator unsuccessful response" library="brokercommon">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:23.951" endtime="20201013 18:05:23.952"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:23.952" endtime="20201013 18:05:23.953"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>External translator returns an invalid response.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:23.953" endtime="20201013 18:05:23.954"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:23.954" endtime="20201013 18:05:23.955"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response data error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:23.955" endtime="20201013 18:05:23.956"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:23.956" endtime="20201013 18:05:23.958"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:23.950" endtime="20201013 18:05:23.958"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters ids</arg>
<arg>minProperties=1</arg>
<arg>maxProperties=1</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:23.959" endtime="20201013 18:05:23.961"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.error.translator_response.data.error.message.parameters.ids</arg>
<arg>{"0": {"_schema": ["Invalid input type."]}}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:23.962" endtime="20201013 18:05:24.009"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:22.720" endtime="20201013 18:05:24.010" critical="yes"></status>
</test>
<test id="s1-t10" name="fetch, 502, when ids parameter has no data connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:24.013" level="INFO">${timestamp} = 2020-10-13T15:05:24.013355Z</msg>
<status status="PASS" starttime="20201013 18:05:24.013" endtime="20201013 18:05:24.013"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:24.012" endtime="20201013 18:05:24.014"></status>
</kw>
<msg timestamp="20201013 18:05:24.014" level="INFO">${timestamp} = 2020-10-13T15:05:24.013355Z</msg>
<status status="PASS" starttime="20201013 18:05:24.012" endtime="20201013 18:05:24.014"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITH_IDS_WITHOUT_DATA}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:24.014" endtime="20201013 18:05:24.015"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITH_IDS_WITHOUT_DATA}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:24.017" level="INFO">${signature} = xbXMVon0M8MCwB/ja7JXMpURHuQFn313uiBiMDOFwUs=</msg>
<status status="PASS" starttime="20201013 18:05:24.017" endtime="20201013 18:05:24.017"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:24.018" endtime="20201013 18:05:24.019"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:24.019" endtime="20201013 18:05:24.019"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:24.020" endtime="20201013 18:05:25.184"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:24.016" endtime="20201013 18:05:25.185"></status>
</kw>
<kw name="Verify handle of translator unsuccessful response" library="brokercommon">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.187" endtime="20201013 18:05:25.189"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.190" endtime="20201013 18:05:25.191"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>External translator returns an invalid response.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.191" endtime="20201013 18:05:25.193"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.193" endtime="20201013 18:05:25.194"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response data error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.195" endtime="20201013 18:05:25.196"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.196" endtime="20201013 18:05:25.198"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:25.186" endtime="20201013 18:05:25.198"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.error.translator_response.data.error.message.parameters.ids</arg>
<arg>{"0": {"id": ["Missing data for required field."]}}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.200" endtime="20201013 18:05:25.276"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:24.011" endtime="20201013 18:05:25.277" critical="yes"></status>
</test>
<test id="s1-t11" name="fetch, 502, when ids parameter has data for one item and no data for other item connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:25.282" level="INFO">${timestamp} = 2020-10-13T15:05:25.282404Z</msg>
<status status="PASS" starttime="20201013 18:05:25.282" endtime="20201013 18:05:25.282"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:25.281" endtime="20201013 18:05:25.283"></status>
</kw>
<msg timestamp="20201013 18:05:25.283" level="INFO">${timestamp} = 2020-10-13T15:05:25.282404Z</msg>
<status status="PASS" starttime="20201013 18:05:25.280" endtime="20201013 18:05:25.283"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITH_IDS_WITH_INCONSISTENT_DATA}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.283" endtime="20201013 18:05:25.284"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITH_IDS_WITH_INCONSISTENT_DATA}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:25.285" level="INFO">${signature} = JI5HLfN++yPcdfCeUMJJQcbTUxW5YQGm4kTIOrevJAQ=</msg>
<status status="PASS" starttime="20201013 18:05:25.285" endtime="20201013 18:05:25.285"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.285" endtime="20201013 18:05:25.286"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.286" endtime="20201013 18:05:25.286"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.286" endtime="20201013 18:05:25.959"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:25.284" endtime="20201013 18:05:25.959"></status>
</kw>
<kw name="Verify handle of translator unsuccessful response" library="brokercommon">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.960" endtime="20201013 18:05:25.961"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.961" endtime="20201013 18:05:25.962"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>External translator returns an invalid response.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.962" endtime="20201013 18:05:25.962"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.962" endtime="20201013 18:05:25.963"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response data error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.963" endtime="20201013 18:05:25.964"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.964" endtime="20201013 18:05:25.965"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:25.959" endtime="20201013 18:05:25.965"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.error.translator_response.data.error.message.parameters.ids</arg>
<arg>{"1": {"id": ["Missing data for required field."]}}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:25.965" endtime="20201013 18:05:25.999"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:25.279" endtime="20201013 18:05:26.000" critical="yes"></status>
</test>
<test id="s1-t12" name="fetch, 200, when id parameter from ids has no value">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:26.002" level="INFO">${timestamp} = 2020-10-13T15:05:26.002209Z</msg>
<status status="PASS" starttime="20201013 18:05:26.002" endtime="20201013 18:05:26.002"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:26.002" endtime="20201013 18:05:26.003"></status>
</kw>
<msg timestamp="20201013 18:05:26.003" level="INFO">${timestamp} = 2020-10-13T15:05:26.002209Z</msg>
<status status="PASS" starttime="20201013 18:05:26.001" endtime="20201013 18:05:26.003"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITH_IDS_WITH_ID}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.003" endtime="20201013 18:05:26.003"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITH_IDS_WITH_ID}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:26.004" level="INFO">${signature} = F2nSWqbGlfQygKEbh+oZA0TP8jZBY+BP1V1w4W14dEY=</msg>
<status status="PASS" starttime="20201013 18:05:26.004" endtime="20201013 18:05:26.004"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.004" endtime="20201013 18:05:26.006"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.006" endtime="20201013 18:05:26.006"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.007" endtime="20201013 18:05:26.520"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:26.004" endtime="20201013 18:05:26.520"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.521" endtime="20201013 18:05:26.522"></status>
</kw>
<kw name="Verify Data Product Context Links and Type" library="brokercommon">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>${CONTEXT_POT_Output_Sensor}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.523" endtime="20201013 18:05:26.523"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
<arg>minItems=0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.523" endtime="20201013 18:05:26.525"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:26.522" endtime="20201013 18:05:26.525"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
<arg>maxItems=1</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.526" endtime="20201013 18:05:26.528"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 timestamp</arg>
<arg>2020-04-20T13:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.528" endtime="20201013 18:05:26.529"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 value</arg>
<arg>19.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.529" endtime="20201013 18:05:26.530"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 @type</arg>
<arg>MeasureAirTemperatureCelsiusDegree</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.531" endtime="20201013 18:05:26.532"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 timestamp</arg>
<arg>2020-04-20T14:00:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.533" endtime="20201013 18:05:26.534"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 value</arg>
<arg>18.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.535" endtime="20201013 18:05:26.536"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 @type</arg>
<arg>MeasureAirTemperatureCelsiusDegree</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.536" endtime="20201013 18:05:26.537"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 timestamp</arg>
<arg>2020-04-20T14:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.538" endtime="20201013 18:05:26.539"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 value</arg>
<arg>17.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.540" endtime="20201013 18:05:26.541"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 @type</arg>
<arg>MeasureAirTemperatureCelsiusDegree</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.541" endtime="20201013 18:05:26.542"></status>
</kw>
<kw name="Verify Signature From Response" library="brokercommon">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body signature type</arg>
<arg>RsaSignature2018</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.543" endtime="20201013 18:05:26.543"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body signature created</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.544" endtime="20201013 18:05:26.544"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body signature creator</arg>
<arg>${TRANSLATOR_PUBLIC_KEY}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.544" endtime="20201013 18:05:26.545"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body signature signatureValue</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.545" endtime="20201013 18:05:26.545"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>True</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.546" endtime="20201013 18:05:26.547"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:26.542" endtime="20201013 18:05:26.547"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:26.001" endtime="20201013 18:05:26.547" critical="yes"></status>
</test>
<test id="s1-t13" name="fetch, 502, when id parameter from ids has invalid value type connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:26.551" level="INFO">${timestamp} = 2020-10-13T15:05:26.550569Z</msg>
<status status="PASS" starttime="20201013 18:05:26.550" endtime="20201013 18:05:26.551"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:26.550" endtime="20201013 18:05:26.551"></status>
</kw>
<msg timestamp="20201013 18:05:26.551" level="INFO">${timestamp} = 2020-10-13T15:05:26.550569Z</msg>
<status status="PASS" starttime="20201013 18:05:26.550" endtime="20201013 18:05:26.551"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITH_IDS_WITH_ID_INVALID_TYPE}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.552" endtime="20201013 18:05:26.552"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITH_IDS_WITH_ID_INVALID_TYPE}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:26.553" level="INFO">${signature} = +CAC0MmSlltv8+FptuzAYb7jZxfYf9XEw0+gijvIdaw=</msg>
<status status="PASS" starttime="20201013 18:05:26.553" endtime="20201013 18:05:26.553"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.553" endtime="20201013 18:05:26.554"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.554" endtime="20201013 18:05:26.554"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:26.555" endtime="20201013 18:05:27.091"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:26.552" endtime="20201013 18:05:27.091"></status>
</kw>
<kw name="Verify handle of translator unsuccessful response" library="brokercommon">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.092" endtime="20201013 18:05:27.093"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.093" endtime="20201013 18:05:27.095"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>External translator returns an invalid response.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.095" endtime="20201013 18:05:27.096"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.096" endtime="20201013 18:05:27.097"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response data error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.097" endtime="20201013 18:05:27.098"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.098" endtime="20201013 18:05:27.099"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:27.092" endtime="20201013 18:05:27.100"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.error.translator_response.data.error.message.parameters.ids</arg>
<arg>{"0": {"id": ["Not a valid string."]}}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.101" endtime="20201013 18:05:27.137"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:26.549" endtime="20201013 18:05:27.138" critical="yes"></status>
</test>
<test id="s1-t14" name="fetch, 502, when ids parameter have invalid type of data connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:27.142" level="INFO">${timestamp} = 2020-10-13T15:05:27.141579Z</msg>
<status status="PASS" starttime="20201013 18:05:27.142" endtime="20201013 18:05:27.142"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:27.142" endtime="20201013 18:05:27.143"></status>
</kw>
<msg timestamp="20201013 18:05:27.143" level="INFO">${timestamp} = 2020-10-13T15:05:27.141579Z</msg>
<status status="PASS" starttime="20201013 18:05:27.141" endtime="20201013 18:05:27.143"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITH_IDS_WITH_INVALID_TYPE}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.143" endtime="20201013 18:05:27.143"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITH_IDS_WITH_INVALID_TYPE}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:27.144" level="INFO">${signature} = SGddUR2Sv+rOglUt7CF67Yiffq5hUWKXpZWF2dx5R8M=</msg>
<status status="PASS" starttime="20201013 18:05:27.144" endtime="20201013 18:05:27.144"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.145" endtime="20201013 18:05:27.145"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.145" endtime="20201013 18:05:27.145"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.145" endtime="20201013 18:05:27.649"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:27.144" endtime="20201013 18:05:27.649"></status>
</kw>
<kw name="Verify handle of translator unsuccessful response" library="brokercommon">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.650" endtime="20201013 18:05:27.651"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.651" endtime="20201013 18:05:27.651"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>External translator returns an invalid response.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.652" endtime="20201013 18:05:27.652"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.652" endtime="20201013 18:05:27.653"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response data error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.653" endtime="20201013 18:05:27.654"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.654" endtime="20201013 18:05:27.655"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:27.650" endtime="20201013 18:05:27.655"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters ids 0</arg>
<arg>Not a valid list.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.655" endtime="20201013 18:05:27.656"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:27.140" endtime="20201013 18:05:27.656" critical="yes"></status>
</test>
<test id="s1-t15" name="fetch, 502, when startTime &amp; endTime have invalid values connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:27.660" level="INFO">${timestamp} = 2020-10-13T15:05:27.660474Z</msg>
<status status="PASS" starttime="20201013 18:05:27.659" endtime="20201013 18:05:27.660"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:27.659" endtime="20201013 18:05:27.660"></status>
</kw>
<msg timestamp="20201013 18:05:27.660" level="INFO">${timestamp} = 2020-10-13T15:05:27.660474Z</msg>
<status status="PASS" starttime="20201013 18:05:27.659" endtime="20201013 18:05:27.660"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITH_INVALID_TIME}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.661" endtime="20201013 18:05:27.661"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITH_INVALID_TIME}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:27.663" level="INFO">${signature} = Vn/1BgkpipAkAffXzB9GKCs+5XbowuTnN3LD64AhYec=</msg>
<status status="PASS" starttime="20201013 18:05:27.663" endtime="20201013 18:05:27.663"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.664" endtime="20201013 18:05:27.664"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.664" endtime="20201013 18:05:27.665"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:27.665" endtime="20201013 18:05:28.205"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:27.662" endtime="20201013 18:05:28.205"></status>
</kw>
<kw name="Verify handle of translator unsuccessful response" library="brokercommon">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.206" endtime="20201013 18:05:28.207"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.207" endtime="20201013 18:05:28.207"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>External translator returns an invalid response.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.207" endtime="20201013 18:05:28.208"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.208" endtime="20201013 18:05:28.209"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response data error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.209" endtime="20201013 18:05:28.209"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.209" endtime="20201013 18:05:28.210"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:28.206" endtime="20201013 18:05:28.210"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters startTime 0</arg>
<arg>Date must follow RFC3339 standard</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.211" endtime="20201013 18:05:28.211"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters endTime 0</arg>
<arg>Date must follow RFC3339 standard</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.212" endtime="20201013 18:05:28.212"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:27.658" endtime="20201013 18:05:28.213" critical="yes"></status>
</test>
<test id="s1-t16" name="fetch, 502, when ids parameter has null as value connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:28.216" level="INFO">${timestamp} = 2020-10-13T15:05:28.215656Z</msg>
<status status="PASS" starttime="20201013 18:05:28.215" endtime="20201013 18:05:28.216"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:28.215" endtime="20201013 18:05:28.216"></status>
</kw>
<msg timestamp="20201013 18:05:28.216" level="INFO">${timestamp} = 2020-10-13T15:05:28.215656Z</msg>
<status status="PASS" starttime="20201013 18:05:28.215" endtime="20201013 18:05:28.216"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITH_IDS_NULL}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.217" endtime="20201013 18:05:28.217"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITH_IDS_NULL}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:28.219" level="INFO">${signature} = U4vWRZ9XIwQQG4NJpr78A3ONmS+8ELIIN9vzng/Nm/U=</msg>
<status status="PASS" starttime="20201013 18:05:28.218" endtime="20201013 18:05:28.219"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.219" endtime="20201013 18:05:28.219"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.220" endtime="20201013 18:05:28.220"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.220" endtime="20201013 18:05:28.764"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:28.217" endtime="20201013 18:05:28.764"></status>
</kw>
<kw name="Verify handle of translator unsuccessful response" library="brokercommon">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.765" endtime="20201013 18:05:28.766"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.767" endtime="20201013 18:05:28.768"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>External translator returns an invalid response.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.768" endtime="20201013 18:05:28.769"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.769" endtime="20201013 18:05:28.769"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response data error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.769" endtime="20201013 18:05:28.771"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.771" endtime="20201013 18:05:28.771"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:28.765" endtime="20201013 18:05:28.772"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.error.translator_response.data.error.message.parameters.ids</arg>
<arg>{"0": ["Field may not be null."]}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.772" endtime="20201013 18:05:28.812"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:28.214" endtime="20201013 18:05:28.813" critical="yes"></status>
</test>
<test id="s1-t17" name="fetch, 502, when dataTypes parameter has null as value connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:28.816" level="INFO">${timestamp} = 2020-10-13T15:05:28.815133Z</msg>
<status status="PASS" starttime="20201013 18:05:28.815" endtime="20201013 18:05:28.816"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:28.815" endtime="20201013 18:05:28.816"></status>
</kw>
<msg timestamp="20201013 18:05:28.816" level="INFO">${timestamp} = 2020-10-13T15:05:28.815133Z</msg>
<status status="PASS" starttime="20201013 18:05:28.814" endtime="20201013 18:05:28.816"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITH_DATA_TYPES_NULL}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.817" endtime="20201013 18:05:28.818"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITH_DATA_TYPES_NULL}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:28.822" level="INFO">${signature} = OCqKs+xbKtS7rQ4ZePdopDmIJ6cPF4wnN0POCMgwqws=</msg>
<status status="PASS" starttime="20201013 18:05:28.821" endtime="20201013 18:05:28.822"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.822" endtime="20201013 18:05:28.823"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.823" endtime="20201013 18:05:28.823"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:28.823" endtime="20201013 18:05:29.309"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:28.820" endtime="20201013 18:05:29.309"></status>
</kw>
<kw name="Verify handle of translator unsuccessful response" library="brokercommon">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.310" endtime="20201013 18:05:29.311"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.311" endtime="20201013 18:05:29.311"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>External translator returns an invalid response.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.311" endtime="20201013 18:05:29.312"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<msg timestamp="20201013 18:05:29.314" level="FAIL">500 is not one of [422]

Failed validating 'enum' in schema:
    {'default': 500, 'enum': [422], 'type': 'integer'}

On instance:
    500</msg>
<status status="FAIL" starttime="20201013 18:05:29.312" endtime="20201013 18:05:29.314"></status>
</kw>
<status status="FAIL" starttime="20201013 18:05:29.310" endtime="20201013 18:05:29.314"></status>
</kw>
<tags>
<tag>bug-3998</tag>
</tags>
<status status="FAIL" starttime="20201013 18:05:28.814" endtime="20201013 18:05:29.315" critical="yes">500 is not one of [422]

Failed validating 'enum' in schema:
    {'default': 500, 'enum': [422], 'type': 'integer'}

On instance:
    500</status>
</test>
<test id="s1-t18" name="fetch, 502, when dataTypes parameter has invalid type connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:29.321" level="INFO">${timestamp} = 2020-10-13T15:05:29.320611Z</msg>
<status status="PASS" starttime="20201013 18:05:29.320" endtime="20201013 18:05:29.321"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:29.320" endtime="20201013 18:05:29.321"></status>
</kw>
<msg timestamp="20201013 18:05:29.321" level="INFO">${timestamp} = 2020-10-13T15:05:29.320611Z</msg>
<status status="PASS" starttime="20201013 18:05:29.320" endtime="20201013 18:05:29.321"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITH_DATA_TYPES_WITH_INVALID_TYPE}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.322" endtime="20201013 18:05:29.322"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITH_DATA_TYPES_WITH_INVALID_TYPE}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:29.324" level="INFO">${signature} = K983w3bZhJQamT/8yMNfe6bK8CpHfp9YQ3NGHsr/XUQ=</msg>
<status status="PASS" starttime="20201013 18:05:29.323" endtime="20201013 18:05:29.324"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.324" endtime="20201013 18:05:29.324"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.324" endtime="20201013 18:05:29.325"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.325" endtime="20201013 18:05:29.828"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:29.323" endtime="20201013 18:05:29.829"></status>
</kw>
<kw name="Verify handle of translator unsuccessful response" library="brokercommon">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.830" endtime="20201013 18:05:29.831"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.831" endtime="20201013 18:05:29.832"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>External translator returns an invalid response.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.832" endtime="20201013 18:05:29.833"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.833" endtime="20201013 18:05:29.834"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response data error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.835" endtime="20201013 18:05:29.836"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.836" endtime="20201013 18:05:29.837"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:29.829" endtime="20201013 18:05:29.837"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters dataTypes 0</arg>
<arg>Not a valid list.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.838" endtime="20201013 18:05:29.840"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:29.319" endtime="20201013 18:05:29.840" critical="yes"></status>
</test>
<test id="s1-t19" name="fetch, 502, when dataTypes parameter has invalid value type connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:29.845" level="INFO">${timestamp} = 2020-10-13T15:05:29.844237Z</msg>
<status status="PASS" starttime="20201013 18:05:29.844" endtime="20201013 18:05:29.845"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:29.843" endtime="20201013 18:05:29.845"></status>
</kw>
<msg timestamp="20201013 18:05:29.845" level="INFO">${timestamp} = 2020-10-13T15:05:29.844237Z</msg>
<status status="PASS" starttime="20201013 18:05:29.843" endtime="20201013 18:05:29.845"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITH_DATA_TYPES_INVALID_VALUE}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.846" endtime="20201013 18:05:29.846"></status>
</kw>
<kw name="Fetch Data Product with return" library="brokercommon">
<arguments>
<arg>${BODY_WITH_DATA_TYPES_INVALID_VALUE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:29.848" level="INFO">${signature} = NLXDEPYcwHzP+dkf7d8coyufV17lhAQlaGO/3FEU6Ug=</msg>
<status status="PASS" starttime="20201013 18:05:29.847" endtime="20201013 18:05:29.848"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.848" endtime="20201013 18:05:29.849"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:29.849" endtime="20201013 18:05:29.849"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201013 18:05:30.322" level="INFO">${response} = {'seconds': 0.468846, 'status': 502, 'body': {'error': {'message': 'External translator returns an invalid response.', 'status': 502, 'translator_response': {'status': 422, 'data': {'error': {'status'...</msg>
<status status="PASS" starttime="20201013 18:05:29.850" endtime="20201013 18:05:30.322"></status>
</kw>
<msg timestamp="20201013 18:05:30.323" level="INFO">${resp} = {'seconds': 0.468846, 'status': 502, 'body': {'error': {'message': 'External translator returns an invalid response.', 'status': 502, 'translator_response': {'status': 422, 'data': {'error': {'status'...</msg>
<status status="PASS" starttime="20201013 18:05:29.846" endtime="20201013 18:05:30.323"></status>
</kw>
<kw name="Verify handle of translator unsuccessful response" library="brokercommon">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:30.324" endtime="20201013 18:05:30.324"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:30.324" endtime="20201013 18:05:30.325"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>External translator returns an invalid response.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:30.325" endtime="20201013 18:05:30.325"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:30.326" endtime="20201013 18:05:30.326"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response data error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:30.326" endtime="20201013 18:05:30.327"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:30.327" endtime="20201013 18:05:30.328"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:30.323" endtime="20201013 18:05:30.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp['body']['error']['translator_response']['data']['error']['message']['parameters']['dataTypes']['0'][0]}</arg>
<arg>Invalid data type "{}"</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:30.328" endtime="20201013 18:05:30.329"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:29.841" endtime="20201013 18:05:30.330" critical="yes"></status>
</test>
<test id="s1-t20" name="fetch, 502, when required dataTypes parameter has no value connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:30.337" level="INFO">${timestamp} = 2020-10-13T15:05:30.337401Z</msg>
<status status="PASS" starttime="20201013 18:05:30.336" endtime="20201013 18:05:30.337"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:30.335" endtime="20201013 18:05:30.337"></status>
</kw>
<msg timestamp="20201013 18:05:30.337" level="INFO">${timestamp} = 2020-10-13T15:05:30.337401Z</msg>
<status status="PASS" starttime="20201013 18:05:30.335" endtime="20201013 18:05:30.337"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITH_DATA_TYPES_WITHOUT_VALUE}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:30.338" endtime="20201013 18:05:30.338"></status>
</kw>
<kw name="Fetch Data Product with return" library="brokercommon">
<arguments>
<arg>${BODY_WITH_DATA_TYPES_WITHOUT_VALUE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:30.339" level="INFO">${signature} = TpQ5NKoG4TsY71pOlYHjgFq31CmevfR5GcbRK39f14o=</msg>
<status status="PASS" starttime="20201013 18:05:30.339" endtime="20201013 18:05:30.339"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:30.340" endtime="20201013 18:05:30.340"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:30.340" endtime="20201013 18:05:30.341"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201013 18:05:31.015" level="INFO">${response} = {'seconds': 0.670278, 'status': 502, 'body': {'error': {'message': 'External translator returns an invalid response.', 'status': 502, 'translator_response': {'status': 422, 'data': {'error': {'status'...</msg>
<status status="PASS" starttime="20201013 18:05:30.341" endtime="20201013 18:05:31.015"></status>
</kw>
<msg timestamp="20201013 18:05:31.016" level="INFO">${resp} = {'seconds': 0.670278, 'status': 502, 'body': {'error': {'message': 'External translator returns an invalid response.', 'status': 502, 'translator_response': {'status': 422, 'data': {'error': {'status'...</msg>
<status status="PASS" starttime="20201013 18:05:30.339" endtime="20201013 18:05:31.016"></status>
</kw>
<kw name="Verify handle of translator unsuccessful response" library="brokercommon">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.016" endtime="20201013 18:05:31.017"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.017" endtime="20201013 18:05:31.018"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message</arg>
<arg>External translator returns an invalid response.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.018" endtime="20201013 18:05:31.018"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.019" endtime="20201013 18:05:31.019"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error translator_response data error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.019" endtime="20201013 18:05:31.020"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response headers X-Product-Signature-Verified</arg>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.020" endtime="20201013 18:05:31.021"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:31.016" endtime="20201013 18:05:31.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp['body']['error']['translator_response']['data']['error']['message']['parameters']['dataTypes']['0'][0]}</arg>
<arg>Invalid data type ""</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.022" endtime="20201013 18:05:31.023"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:30.334" endtime="20201013 18:05:31.023" critical="yes"></status>
</test>
<test id="s1-t21" name="fetch, 502, when required parameter @context is missing connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:31.026" level="INFO">${timestamp} = 2020-10-13T15:05:31.026036Z</msg>
<status status="PASS" starttime="20201013 18:05:31.026" endtime="20201013 18:05:31.026"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:31.025" endtime="20201013 18:05:31.026"></status>
</kw>
<msg timestamp="20201013 18:05:31.026" level="INFO">${timestamp} = 2020-10-13T15:05:31.026036Z</msg>
<status status="PASS" starttime="20201013 18:05:31.025" endtime="20201013 18:05:31.026"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BROKER_BODY_WITHOUT_CONTEXT}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.027" endtime="20201013 18:05:31.027"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BROKER_BODY_WITHOUT_CONTEXT}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:31.028" level="INFO">${signature} = kaxoHb4cF8Q/OjwT4U9yS/hZ4Tbvp1V3fKK1HD/kEhA=</msg>
<status status="PASS" starttime="20201013 18:05:31.028" endtime="20201013 18:05:31.028"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.029" endtime="20201013 18:05:31.029"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.029" endtime="20201013 18:05:31.029"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.030" endtime="20201013 18:05:31.926"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:31.028" endtime="20201013 18:05:31.926"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.927" endtime="20201013 18:05:31.928"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.928" endtime="20201013 18:05:31.929"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message @context 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.929" endtime="20201013 18:05:31.930"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:31.024" endtime="20201013 18:05:31.931" critical="yes"></status>
</test>
<test id="s1-t22" name="fetch, 502, when required parameter @context has invalid URL value">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:31.933" level="INFO">${timestamp} = 2020-10-13T15:05:31.933483Z</msg>
<status status="PASS" starttime="20201013 18:05:31.933" endtime="20201013 18:05:31.933"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:31.933" endtime="20201013 18:05:31.934"></status>
</kw>
<msg timestamp="20201013 18:05:31.934" level="INFO">${timestamp} = 2020-10-13T15:05:31.933483Z</msg>
<status status="PASS" starttime="20201013 18:05:31.932" endtime="20201013 18:05:31.934"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BROKER_BODY_CONTEXT_INVALID}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.934" endtime="20201013 18:05:31.935"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BROKER_BODY_CONTEXT_INVALID}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:31.937" level="INFO">${signature} = LuI9Yd9mUyQGYL82GcIxuARQ2QJC8xaxefGhvcFwCpo=</msg>
<status status="PASS" starttime="20201013 18:05:31.936" endtime="20201013 18:05:31.937"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.937" endtime="20201013 18:05:31.938"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.939" endtime="20201013 18:05:31.939"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:31.939" endtime="20201013 18:05:32.862"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:31.935" endtime="20201013 18:05:32.862"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:32.863" endtime="20201013 18:05:32.864"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:32.864" endtime="20201013 18:05:32.865"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message @context 0</arg>
<arg>Must start with ${CONTEXT_POT_Parameters_Sensor}.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:32.865" endtime="20201013 18:05:32.866"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:31.932" endtime="20201013 18:05:32.866" critical="yes"></status>
</test>
<test id="s1-t23" name="fetch, 422, when required parameter @context has invalid value">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:32.872" level="INFO">${timestamp} = 2020-10-13T15:05:32.871688Z</msg>
<status status="PASS" starttime="20201013 18:05:32.872" endtime="20201013 18:05:32.872"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:32.871" endtime="20201013 18:05:32.872"></status>
</kw>
<msg timestamp="20201013 18:05:32.872" level="INFO">${timestamp} = 2020-10-13T15:05:32.871688Z</msg>
<status status="PASS" starttime="20201013 18:05:32.871" endtime="20201013 18:05:32.872"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BROKER_BODY_CONTEXT_NOT_URL}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:32.873" endtime="20201013 18:05:32.873"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BROKER_BODY_CONTEXT_NOT_URL}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:32.874" level="INFO">${signature} = 9k/ZVIwgSIdMKLUwoEMRXlSnSvvSwAeQ3NEcT+kHzBA=</msg>
<status status="PASS" starttime="20201013 18:05:32.874" endtime="20201013 18:05:32.875"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:32.875" endtime="20201013 18:05:32.875"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:32.876" endtime="20201013 18:05:32.876"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:32.876" endtime="20201013 18:05:33.526"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:32.873" endtime="20201013 18:05:33.527"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:33.527" endtime="20201013 18:05:33.528"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:33.528" endtime="20201013 18:05:33.529"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message @context 0</arg>
<arg>Not a valid URL.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:33.529" endtime="20201013 18:05:33.530"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:32.868" endtime="20201013 18:05:33.531" critical="yes"></status>
</test>
<test id="s1-t24" name="fetch, 502, when start time has value without timezone connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:33.534" level="INFO">${timestamp} = 2020-10-13T15:05:33.532793Z</msg>
<status status="PASS" starttime="20201013 18:05:33.533" endtime="20201013 18:05:33.534"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:33.533" endtime="20201013 18:05:33.534"></status>
</kw>
<msg timestamp="20201013 18:05:33.534" level="INFO">${timestamp} = 2020-10-13T15:05:33.532793Z</msg>
<status status="PASS" starttime="20201013 18:05:33.533" endtime="20201013 18:05:33.534"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BROKER_BODY_START_WITHOUT_TIMEZONE}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:33.534" endtime="20201013 18:05:33.535"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BROKER_BODY_START_WITHOUT_TIMEZONE}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:33.536" level="INFO">${signature} = GtU0X3YQ+c7ISsVOJrBAf2ULgeNw60RZ6/GlvzXsg2I=</msg>
<status status="PASS" starttime="20201013 18:05:33.536" endtime="20201013 18:05:33.536"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:33.537" endtime="20201013 18:05:33.537"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:33.537" endtime="20201013 18:05:33.538"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:33.538" endtime="20201013 18:05:33.989"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:33.535" endtime="20201013 18:05:33.989"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:33.990" endtime="20201013 18:05:33.990"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:33.991" endtime="20201013 18:05:33.991"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters startTime 0</arg>
<arg>Date must contain timezone info</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:33.992" endtime="20201013 18:05:33.993"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:33.532" endtime="20201013 18:05:33.993" critical="yes"></status>
</test>
<test id="s1-t25" name="fetch, 502, when end time has value without timezone connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:33.999" level="INFO">${timestamp} = 2020-10-13T15:05:33.997522Z</msg>
<status status="PASS" starttime="20201013 18:05:33.998" endtime="20201013 18:05:33.999"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:33.998" endtime="20201013 18:05:33.999"></status>
</kw>
<msg timestamp="20201013 18:05:33.999" level="INFO">${timestamp} = 2020-10-13T15:05:33.997522Z</msg>
<status status="PASS" starttime="20201013 18:05:33.997" endtime="20201013 18:05:33.999"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BROKER_BODY_END_WITHOUT_TIMEZONE}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:33.999" endtime="20201013 18:05:34.000"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BROKER_BODY_END_WITHOUT_TIMEZONE}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:34.001" level="INFO">${signature} = XxC4z1xO28wxOcIQJB8ycTwmGTBbLbgk0BFvOFLy2JU=</msg>
<status status="PASS" starttime="20201013 18:05:34.001" endtime="20201013 18:05:34.001"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.002" endtime="20201013 18:05:34.002"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.003" endtime="20201013 18:05:34.003"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.003" endtime="20201013 18:05:34.466"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:34.000" endtime="20201013 18:05:34.467"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.469" endtime="20201013 18:05:34.471"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.472" endtime="20201013 18:05:34.473"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error translator_response data error message parameters endTime 0</arg>
<arg>Date must contain timezone info</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.474" endtime="20201013 18:05:34.476"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:33.997" endtime="20201013 18:05:34.478" critical="yes"></status>
</test>
<test id="s1-t26" name="fetch, 422, when required parameter timestamp is missing">
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BROKER_BODY_CO2}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:34.481" level="INFO">${signature} = fh7bQ2UHEsiQmFsU0FrfyyenkGHXKzp8SWVoSBMZ92E=</msg>
<status status="PASS" starttime="20201013 18:05:34.481" endtime="20201013 18:05:34.481"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.481" endtime="20201013 18:05:34.482"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.482" endtime="20201013 18:05:34.482"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.482" endtime="20201013 18:05:34.730"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:34.480" endtime="20201013 18:05:34.730"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.730" endtime="20201013 18:05:34.731"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message timestamp 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.731" endtime="20201013 18:05:34.732"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:34.479" endtime="20201013 18:05:34.732" critical="yes"></status>
</test>
<test id="s1-t27" name="fetch, 200, when request data Product created with dummy connector humidity endpoint">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:34.738" level="INFO">${timestamp} = 2020-10-13T15:05:34.738308Z</msg>
<status status="PASS" starttime="20201013 18:05:34.737" endtime="20201013 18:05:34.738"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:34.737" endtime="20201013 18:05:34.738"></status>
</kw>
<msg timestamp="20201013 18:05:34.739" level="INFO">${timestamp} = 2020-10-13T15:05:34.738308Z</msg>
<status status="PASS" starttime="20201013 18:05:34.736" endtime="20201013 18:05:34.739"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BROKER_BODY_HUMIDITY}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.740" endtime="20201013 18:05:34.741"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BROKER_BODY_HUMIDITY}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:34.744" level="INFO">${signature} = 3UdFR07rR3/m4aB3gGIbd9ULKpWVofTd81/sTuIjYjE=</msg>
<status status="PASS" starttime="20201013 18:05:34.744" endtime="20201013 18:05:34.744"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.745" endtime="20201013 18:05:34.745"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.745" endtime="20201013 18:05:34.746"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:34.746" endtime="20201013 18:05:35.255"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:34.743" endtime="20201013 18:05:35.255"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.256" endtime="20201013 18:05:35.257"></status>
</kw>
<kw name="Verify Data Product Context Links and Type" library="brokercommon">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>${CONTEXT_POT_Output_Sensor}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.258" endtime="20201013 18:05:35.259"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
<arg>minItems=0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.259" endtime="20201013 18:05:35.262"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:35.257" endtime="20201013 18:05:35.262"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
<arg>minItems=3</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.262" endtime="20201013 18:05:35.265"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 id id</arg>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.266" endtime="20201013 18:05:35.268"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 timestamp</arg>
<arg>2020-04-20T13:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.269" endtime="20201013 18:05:35.270"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 value</arg>
<arg>61.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.271" endtime="20201013 18:05:35.272"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.272" endtime="20201013 18:05:35.274"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 timestamp</arg>
<arg>2020-04-20T14:00:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.274" endtime="20201013 18:05:35.276"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 value</arg>
<arg>60.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.277" endtime="20201013 18:05:35.278"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.279" endtime="20201013 18:05:35.280"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 timestamp</arg>
<arg>2020-04-20T14:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.281" endtime="20201013 18:05:35.282"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 value</arg>
<arg>59.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.282" endtime="20201013 18:05:35.283"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.284" endtime="20201013 18:05:35.286"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 id id</arg>
<arg>2</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.286" endtime="20201013 18:05:35.287"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 0 timestamp</arg>
<arg>2020-04-20T13:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.288" endtime="20201013 18:05:35.290"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 0 value</arg>
<arg>57.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.290" endtime="20201013 18:05:35.292"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 0 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.293" endtime="20201013 18:05:35.294"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 1 timestamp</arg>
<arg>2020-04-20T14:00:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.295" endtime="20201013 18:05:35.296"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 1 value</arg>
<arg>56.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.297" endtime="20201013 18:05:35.299"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 1 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.299" endtime="20201013 18:05:35.302"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 2 timestamp</arg>
<arg>2020-04-20T14:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.302" endtime="20201013 18:05:35.304"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 2 value</arg>
<arg>55.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.304" endtime="20201013 18:05:35.305"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 2 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.306" endtime="20201013 18:05:35.307"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 id id</arg>
<arg>3</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.308" endtime="20201013 18:05:35.308"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 0 timestamp</arg>
<arg>2020-04-20T13:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.309" endtime="20201013 18:05:35.310"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 0 value</arg>
<arg>57.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.310" endtime="20201013 18:05:35.311"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 0 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.312" endtime="20201013 18:05:35.313"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 1 timestamp</arg>
<arg>2020-04-20T14:00:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.313" endtime="20201013 18:05:35.314"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 1 value</arg>
<arg>56.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.314" endtime="20201013 18:05:35.316"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 1 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.316" endtime="20201013 18:05:35.318"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 2 timestamp</arg>
<arg>2020-04-20T14:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.320" endtime="20201013 18:05:35.321"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 2 value</arg>
<arg>55.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.321" endtime="20201013 18:05:35.323"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 2 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.323" endtime="20201013 18:05:35.324"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:34.733" endtime="20201013 18:05:35.324" critical="yes"></status>
</test>
<test id="s1-t28" name="fetch, 200, when request data Product created with dummy connector CO2 endpoint">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:35.329" level="INFO">${timestamp} = 2020-10-13T15:05:35.328823Z</msg>
<status status="PASS" starttime="20201013 18:05:35.328" endtime="20201013 18:05:35.329"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:35.327" endtime="20201013 18:05:35.329"></status>
</kw>
<msg timestamp="20201013 18:05:35.329" level="INFO">${timestamp} = 2020-10-13T15:05:35.328823Z</msg>
<status status="PASS" starttime="20201013 18:05:35.326" endtime="20201013 18:05:35.329"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BROKER_BODY_CO2}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.330" endtime="20201013 18:05:35.331"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BROKER_BODY_CO2}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:35.332" level="INFO">${signature} = mZ2EOmmQD2pwJIRjoxKKe0dmA7NCOzx4wztXxOw0MIY=</msg>
<status status="PASS" starttime="20201013 18:05:35.332" endtime="20201013 18:05:35.332"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.332" endtime="20201013 18:05:35.333"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.333" endtime="20201013 18:05:35.333"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.333" endtime="20201013 18:05:35.821"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:35.331" endtime="20201013 18:05:35.821"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.822" endtime="20201013 18:05:35.822"></status>
</kw>
<kw name="Verify Data Product Context Links and Type" library="brokercommon">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>${CONTEXT_POT_Output_Sensor}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.823" endtime="20201013 18:05:35.824"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
<arg>minItems=0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.824" endtime="20201013 18:05:35.826"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:35.823" endtime="20201013 18:05:35.826"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
<arg>minItems=3</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.826" endtime="20201013 18:05:35.828"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 id id</arg>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.829" endtime="20201013 18:05:35.829"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 timestamp</arg>
<arg>2020-04-20T13:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.830" endtime="20201013 18:05:35.831"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 value</arg>
<arg>424.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.832" endtime="20201013 18:05:35.833"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 @type</arg>
<arg>MeasureAirCO2LevelPPM</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.835" endtime="20201013 18:05:35.836"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 timestamp</arg>
<arg>2020-04-20T14:00:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.836" endtime="20201013 18:05:35.837"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 value</arg>
<arg>408.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.837" endtime="20201013 18:05:35.838"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 @type</arg>
<arg>MeasureAirCO2LevelPPM</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.839" endtime="20201013 18:05:35.840"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 timestamp</arg>
<arg>2020-04-20T14:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.841" endtime="20201013 18:05:35.842"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 value</arg>
<arg>392.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.842" endtime="20201013 18:05:35.843"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 @type</arg>
<arg>MeasureAirCO2LevelPPM</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.843" endtime="20201013 18:05:35.844"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 id id</arg>
<arg>2</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.845" endtime="20201013 18:05:35.845"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 0 timestamp</arg>
<arg>2020-04-20T13:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.846" endtime="20201013 18:05:35.847"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 0 value</arg>
<arg>352.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.848" endtime="20201013 18:05:35.848"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 0 @type</arg>
<arg>MeasureAirCO2LevelPPM</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.849" endtime="20201013 18:05:35.850"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 1 timestamp</arg>
<arg>2020-04-20T14:00:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.850" endtime="20201013 18:05:35.852"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 1 value</arg>
<arg>336.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.853" endtime="20201013 18:05:35.853"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 1 @type</arg>
<arg>MeasureAirCO2LevelPPM</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.854" endtime="20201013 18:05:35.855"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 2 timestamp</arg>
<arg>2020-04-20T14:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.855" endtime="20201013 18:05:35.856"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 2 value</arg>
<arg>320.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.856" endtime="20201013 18:05:35.857"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 2 @type</arg>
<arg>MeasureAirCO2LevelPPM</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.858" endtime="20201013 18:05:35.859"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 id id</arg>
<arg>3</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.860" endtime="20201013 18:05:35.861"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 0 timestamp</arg>
<arg>2020-04-20T13:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.861" endtime="20201013 18:05:35.862"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 0 value</arg>
<arg>360.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.863" endtime="20201013 18:05:35.863"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 0 @type</arg>
<arg>MeasureAirCO2LevelPPM</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.864" endtime="20201013 18:05:35.865"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 1 timestamp</arg>
<arg>2020-04-20T14:00:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.865" endtime="20201013 18:05:35.866"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 1 value</arg>
<arg>344.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.867" endtime="20201013 18:05:35.868"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 1 @type</arg>
<arg>MeasureAirCO2LevelPPM</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.869" endtime="20201013 18:05:35.869"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 2 timestamp</arg>
<arg>2020-04-20T14:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.870" endtime="20201013 18:05:35.871"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 2 value</arg>
<arg>328.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.871" endtime="20201013 18:05:35.872"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 2 @type</arg>
<arg>MeasureAirCO2LevelPPM</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.873" endtime="20201013 18:05:35.873"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:35.325" endtime="20201013 18:05:35.874" critical="yes"></status>
</test>
<test id="s1-t29" name="fetch, 200, when request has 2 items as data types for data Product created with dummy connector humidity endpoint">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:35.878" level="INFO">${timestamp} = 2020-10-13T15:05:35.877602Z</msg>
<status status="PASS" starttime="20201013 18:05:35.877" endtime="20201013 18:05:35.878"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:35.877" endtime="20201013 18:05:35.878"></status>
</kw>
<msg timestamp="20201013 18:05:35.878" level="INFO">${timestamp} = 2020-10-13T15:05:35.877602Z</msg>
<status status="PASS" starttime="20201013 18:05:35.876" endtime="20201013 18:05:35.878"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_DATA_TYPES_LIST}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.879" endtime="20201013 18:05:35.879"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_DATA_TYPES_LIST}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:35.880" level="INFO">${signature} = FnkGKxbaUP5x7z0OX8wDA0BOdr0wqXBIPc29kBrDyGM=</msg>
<status status="PASS" starttime="20201013 18:05:35.880" endtime="20201013 18:05:35.880"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.880" endtime="20201013 18:05:35.881"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.881" endtime="20201013 18:05:35.882"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:35.882" endtime="20201013 18:05:36.342"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:35.879" endtime="20201013 18:05:36.343"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.343" endtime="20201013 18:05:36.344"></status>
</kw>
<kw name="Verify Data Product Context Links and Type" library="brokercommon">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>${CONTEXT_POT_Output_Sensor}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.345" endtime="20201013 18:05:36.346"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
<arg>minItems=0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.346" endtime="20201013 18:05:36.347"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:36.345" endtime="20201013 18:05:36.348"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
<arg>minItems=3</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.348" endtime="20201013 18:05:36.350"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 id id</arg>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.350" endtime="20201013 18:05:36.351"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 timestamp</arg>
<arg>2020-04-20T13:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.352" endtime="20201013 18:05:36.352"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 value</arg>
<arg>61.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.353" endtime="20201013 18:05:36.354"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.354" endtime="20201013 18:05:36.355"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 timestamp</arg>
<arg>2020-04-20T14:00:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.356" endtime="20201013 18:05:36.356"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 value</arg>
<arg>60.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.357" endtime="20201013 18:05:36.358"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 1 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.358" endtime="20201013 18:05:36.360"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 timestamp</arg>
<arg>2020-04-20T14:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.360" endtime="20201013 18:05:36.362"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 value</arg>
<arg>59.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.363" endtime="20201013 18:05:36.364"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 2 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.365" endtime="20201013 18:05:36.366"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 id id</arg>
<arg>2</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.367" endtime="20201013 18:05:36.368"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 0 timestamp</arg>
<arg>2020-04-20T13:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.369" endtime="20201013 18:05:36.370"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 0 value</arg>
<arg>57.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.371" endtime="20201013 18:05:36.372"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 0 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.372" endtime="20201013 18:05:36.373"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 1 timestamp</arg>
<arg>2020-04-20T14:00:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.374" endtime="20201013 18:05:36.375"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 1 value</arg>
<arg>56.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.375" endtime="20201013 18:05:36.376"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 1 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.377" endtime="20201013 18:05:36.377"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 2 timestamp</arg>
<arg>2020-04-20T14:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.378" endtime="20201013 18:05:36.379"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 2 value</arg>
<arg>55.0</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.380" endtime="20201013 18:05:36.380"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 1 measurements 2 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.381" endtime="20201013 18:05:36.382"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 id id</arg>
<arg>3</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.382" endtime="20201013 18:05:36.384"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 0 timestamp</arg>
<arg>2020-04-20T13:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.385" endtime="20201013 18:05:36.386"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 0 value</arg>
<arg>57.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.386" endtime="20201013 18:05:36.388"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 0 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.388" endtime="20201013 18:05:36.389"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 1 timestamp</arg>
<arg>2020-04-20T14:00:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.390" endtime="20201013 18:05:36.391"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 1 value</arg>
<arg>56.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.392" endtime="20201013 18:05:36.393"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 1 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.394" endtime="20201013 18:05:36.396"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 2 timestamp</arg>
<arg>2020-04-20T14:30:00+00:00</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.397" endtime="20201013 18:05:36.397"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 2 value</arg>
<arg>55.5</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.398" endtime="20201013 18:05:36.399"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 2 measurements 2 @type</arg>
<arg>MeasureHumidity</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.399" endtime="20201013 18:05:36.401"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:35.875" endtime="20201013 18:05:36.401" critical="yes"></status>
</test>
<test id="s1-t30" name="fetch, 502, when dataTypes parameter has invalid value connector returns 422">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:36.404" level="INFO">${timestamp} = 2020-10-13T15:05:36.404252Z</msg>
<status status="PASS" starttime="20201013 18:05:36.404" endtime="20201013 18:05:36.405"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:36.404" endtime="20201013 18:05:36.405"></status>
</kw>
<msg timestamp="20201013 18:05:36.405" level="INFO">${timestamp} = 2020-10-13T15:05:36.404252Z</msg>
<status status="PASS" starttime="20201013 18:05:36.403" endtime="20201013 18:05:36.405"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_INVALID_DATA_TYPES_VALUE}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.405" endtime="20201013 18:05:36.406"></status>
</kw>
<kw name="Fetch Data Product with return" library="brokercommon">
<arguments>
<arg>${BODY_INVALID_DATA_TYPES_VALUE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:36.407" level="INFO">${signature} = Lh3pZ6OMZtNkqQekQqVgicRizmsqTluJCDMb79Iw670=</msg>
<status status="PASS" starttime="20201013 18:05:36.407" endtime="20201013 18:05:36.407"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.407" endtime="20201013 18:05:36.408"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.408" endtime="20201013 18:05:36.409"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201013 18:05:36.868" level="INFO">${response} = {'seconds': 0.453635, 'status': 502, 'body': {'error': {'message': 'External translator returns an invalid response.', 'status': 502, 'translator_response': {'status': 422, 'data': {'error': {'status'...</msg>
<status status="PASS" starttime="20201013 18:05:36.409" endtime="20201013 18:05:36.868"></status>
</kw>
<msg timestamp="20201013 18:05:36.868" level="INFO">${resp} = {'seconds': 0.453635, 'status': 502, 'body': {'error': {'message': 'External translator returns an invalid response.', 'status': 502, 'translator_response': {'status': 422, 'data': {'error': {'status'...</msg>
<status status="PASS" starttime="20201013 18:05:36.406" endtime="20201013 18:05:36.868"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.869" endtime="20201013 18:05:36.870"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>502</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.870" endtime="20201013 18:05:36.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp['body']['error']['translator_response']['data']['error']['message']['parameters']['dataTypes']['0'][0]}</arg>
<arg>Invalid data type "MeasureAirCO2Level"</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.871" endtime="20201013 18:05:36.872"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:36.402" endtime="20201013 18:05:36.872" critical="yes"></status>
</test>
<test id="s1-t31" name="fetch, 422, when required parameter productCode is missing">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Get Timestamp</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<kw name="Get Timestamp" library="dummy_variables">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S.%fZ</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20201013 18:05:36.875" level="INFO">${timestamp} = 2020-10-13T15:05:36.875457Z</msg>
<status status="PASS" starttime="20201013 18:05:36.875" endtime="20201013 18:05:36.875"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:36.874" endtime="20201013 18:05:36.876"></status>
</kw>
<msg timestamp="20201013 18:05:36.876" level="INFO">${timestamp} = 2020-10-13T15:05:36.875457Z</msg>
<status status="PASS" starttime="20201013 18:05:36.874" endtime="20201013 18:05:36.876"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${BODY_WITHOUT_PRODUCT_CODE}</arg>
<arg>timestamp</arg>
<arg>${timestamp}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.876" endtime="20201013 18:05:36.877"></status>
</kw>
<kw name="Fetch Data Product" library="brokercommon">
<arguments>
<arg>${BODY_WITHOUT_PRODUCT_CODE}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRETS["world"]}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20201013 18:05:36.879" level="INFO">${signature} = ReEkfoiUHVTtOwvkM5abRuDhuo6KAwL7g4cLTmzxbCM=</msg>
<status status="PASS" starttime="20201013 18:05:36.878" endtime="20201013 18:05:36.879"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${app_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.879" endtime="20201013 18:05:36.879"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${auth_header}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.879" endtime="20201013 18:05:36.880"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/broker/v1/fetch-data-product</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:36.880" endtime="20201013 18:05:37.128"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:36.878" endtime="20201013 18:05:37.128"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:37.129" endtime="20201013 18:05:37.129"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message productCode 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:37.130" endtime="20201013 18:05:37.131"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:36.873" endtime="20201013 18:05:37.131" critical="yes"></status>
</test>
<kw name="Delete All DataProducts" library="dummy_variables" type="teardown">
<kw name="Delete DataProduct By ProductCode" library="dummy_variables">
<arguments>
<arg>${PRODUCT_CODE}</arg>
</arguments>
<kw name="Set Authorization token in header" library="dummy_variables">
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"Authorization": "Bearer ${demo_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:37.135" endtime="20201013 18:05:37.136"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:37.135" endtime="20201013 18:05:37.136"></status>
</kw>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>/products/v1/${PRODUCT_CODE}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:37.136" endtime="20201013 18:05:38.148"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>204</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:38.148" endtime="20201013 18:05:38.149"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:37.135" endtime="20201013 18:05:38.149"></status>
</kw>
<kw name="Delete DataProduct By ProductCode" library="dummy_variables">
<arguments>
<arg>${PRODUCT_CODE_HUMIDITY}</arg>
</arguments>
<kw name="Set Authorization token in header" library="dummy_variables">
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"Authorization": "Bearer ${demo_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:38.150" endtime="20201013 18:05:38.150"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:38.150" endtime="20201013 18:05:38.151"></status>
</kw>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>/products/v1/${PRODUCT_CODE}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:38.151" endtime="20201013 18:05:59.192"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>204</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:59.192" endtime="20201013 18:05:59.193"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:38.149" endtime="20201013 18:05:59.193"></status>
</kw>
<kw name="Delete DataProduct By ProductCode" library="dummy_variables">
<arguments>
<arg>${PRODUCT_CODE_CO2}</arg>
</arguments>
<kw name="Set Authorization token in header" library="dummy_variables">
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"Authorization": "Bearer ${demo_token}"}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:59.194" endtime="20201013 18:05:59.194"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:59.193" endtime="20201013 18:05:59.195"></status>
</kw>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>/products/v1/${PRODUCT_CODE}</arg>
</arguments>
<status status="PASS" starttime="20201013 18:05:59.195" endtime="20201013 18:06:20.193"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>204</arg>
</arguments>
<status status="PASS" starttime="20201013 18:06:20.194" endtime="20201013 18:06:20.195"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:59.193" endtime="20201013 18:06:20.195"></status>
</kw>
<status status="PASS" starttime="20201013 18:05:37.135" endtime="20201013 18:06:20.195"></status>
</kw>
<doc>Set of tests to validate response when fetch data Product created with Dummy connector</doc>
<status status="FAIL" starttime="20201013 18:03:50.199" endtime="20201013 18:06:20.195"></status>
</suite>
<statistics>
<total>
<stat pass="30" fail="1">Critical Tests</stat>
<stat pass="30" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1">bug-3998</stat>
</tag>
<suite>
<stat pass="30" fail="1" id="s1" name="Dummy Connector">Dummy Connector</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
